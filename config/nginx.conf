# References:
# - https://www.nginx.com/blog/tuning-nginx/
# - https://www.linode.com/docs/websites/nginx/configure-nginx-for-optimized-performance
# - https://habrahabr.ru/post/198982/
# - https://github.com/wodby/drupal-nginx

user www-data;
pid /var/run/nginx.pid;

# The number of NGINX worker processes (the default is 1).
# In most cases, running one worker process per CPU core works well,
# and we recommend setting this directive to auto to achieve that.
# There are times when you may want to increase this number,
# such as when the worker processes have to do a lot of disk I/O.
worker_processes 1;

# Sends errors to a Docker logs (I hope).
error_log /proc/self/fd/2 warn;

events {
	# The maximum number of connections that each worker process can handle simultaneously.
	worker_connections 1024;
	multi_accept on;
}


http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	access_log  /var/log/nginx/access.log  main;

	# Enables or disables specifying the port in absolute redirects issued by nginx.
	port_in_redirect off;

	# Specifies the response timeout to the client.
	# This timeout does not apply to the entire transfer but, rather, only between
	# two subsequent client-read operations. Thus, if the client has not read any data for
	# this amount of time, then nginx shuts down the connection.
	send_timeout 60;
	# Optimizes serving static files from the file system, like logos
	sendfile on;
	# Optimizes the amount of data sent down the wire at once by activating the TCP_CORK option within the TCP stack.
	tcp_nopush on;
	# Allows nginx to make TCP send multiple buffers as individual packets.
	tcp_nodelay on;
	client_body_timeout 60;
	client_header_timeout 60;
	client_max_body_size 64M;

	# How long an idle keepalive connection remains open.
	keepalive_timeout 60;
	keepalive_requests 100;
	# Allows the server to close the connection after a client stops responding.
	# This frees up socket-associated memory.
	reset_timedout_connection on;

	# Enables or disables emitting nginx version in error messages and in the “Server” response header field.
	server_tokens off;

	# This directive enables the upload progress module and reserve zone_size bytes to the zone_name which will
	# be used to store the per-connection tracking information.
	# Requires extra NGINX module.
	# upload_progress uploads 1m;

	# Fast CGI config.
	fastcgi_buffers             8 16k;
	fastcgi_buffer_size         32k;
	fastcgi_intercept_errors    on;
	fastcgi_read_timeout        60;
	include                     fastcgi_params;

	# Gzip config.
	gzip                on;
	gzip_buffers        16 8k;
	gzip_comp_level     2;
	gzip_http_version   1.1;
	gzip_min_length     10240;
	gzip_types          text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
	gzip_vary           on;
	gzip_proxied        any;
	gzip_disable        "MSIE [1-6]\.";

	# Extra headers.
	add_header  X-XSS-Protection '1; mode=block';
	add_header  X-Frame-Options SAMEORIGIN;
	add_header  X-Content-Type-Options nosniff;

	# From Wodby config.
	map $http_x_forwarded_proto $fastcgi_https {
		default $https;
		http '';
		https on;
	}

	# From Wodby config.
    	map $uri $no_slash_uri {
		~^/(?<no_slash>.*)$ $no_slash;
	}

    	# Disables direct access to a site by IP address.
    	server {
        	listen 80 default_server;
	        listen [::]:80 default_server;

    		server_name "";
	    	return 444;
	}

	include /etc/nginx/conf.d/*.conf;
}
